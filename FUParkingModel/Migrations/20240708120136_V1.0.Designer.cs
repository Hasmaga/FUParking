// <auto-generated />
using System;
using FUParkingModel.DatabaseContext;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;

#nullable disable

namespace FUParkingModel.Migrations
{
    [DbContext(typeof(FUParkingDatabaseContext))]
    [Migration("20240708120136_V1.0")]
    partial class V10
    {
        /// <inheritdoc />
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "8.0.4")
                .HasAnnotation("Relational:MaxIdentifierLength", 128);

            SqlServerModelBuilderExtensions.UseIdentityColumns(modelBuilder);

            modelBuilder.Entity("FUParkingModel.Object.Card", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier")
                        .HasColumnName("Id");

                    b.Property<string>("CardNumber")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)")
                        .HasColumnName("CardNumber");

                    b.Property<Guid?>("CreatedById")
                        .HasColumnType("uniqueidentifier")
                        .HasColumnName("CreateById");

                    b.Property<DateTime>("CreatedDate")
                        .HasColumnType("datetime2")
                        .HasColumnName("CreatedDate");

                    b.Property<DateTime?>("DeletedDate")
                        .HasColumnType("datetime2")
                        .HasColumnName("DeletedDate");

                    b.Property<Guid?>("LastModifyById")
                        .HasColumnType("uniqueidentifier")
                        .HasColumnName("LastModifyById");

                    b.Property<DateTime?>("LastModifyDate")
                        .HasColumnType("datetime2")
                        .HasColumnName("LastModifyDate");

                    b.Property<string>("PlateNumber")
                        .HasColumnType("nvarchar(max)")
                        .HasColumnName("PlateNumber");

                    b.HasKey("Id");

                    b.HasIndex("CreatedById");

                    b.HasIndex("LastModifyById");

                    b.ToTable("Card", "dbo");
                });

            modelBuilder.Entity("FUParkingModel.Object.Customer", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier")
                        .HasColumnName("Id");

                    b.Property<Guid?>("CreatedById")
                        .HasColumnType("uniqueidentifier")
                        .HasColumnName("CreateById");

                    b.Property<DateTime>("CreatedDate")
                        .HasColumnType("datetime2")
                        .HasColumnName("CreatedDate");

                    b.Property<Guid>("CustomerTypeId")
                        .HasColumnType("uniqueidentifier")
                        .HasColumnName("CustomerTypeId");

                    b.Property<DateTime?>("DeletedDate")
                        .HasColumnType("datetime2")
                        .HasColumnName("DeletedDate");

                    b.Property<string>("Email")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)")
                        .HasColumnName("Email");

                    b.Property<string>("FullName")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)")
                        .HasColumnName("FullName");

                    b.Property<Guid?>("LastModifyById")
                        .HasColumnType("uniqueidentifier")
                        .HasColumnName("LastModifyById");

                    b.Property<DateTime?>("LastModifyDate")
                        .HasColumnType("datetime2")
                        .HasColumnName("LastModifyDate");

                    b.Property<string>("StatusCustomer")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)")
                        .HasColumnName("StatusCustomer");

                    b.HasKey("Id");

                    b.HasIndex("CreatedById");

                    b.HasIndex("CustomerTypeId");

                    b.HasIndex("LastModifyById");

                    b.ToTable("Customer", "dbo");
                });

            modelBuilder.Entity("FUParkingModel.Object.CustomerType", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier")
                        .HasColumnName("Id");

                    b.Property<Guid?>("CreatedById")
                        .HasColumnType("uniqueidentifier")
                        .HasColumnName("CreateById");

                    b.Property<DateTime>("CreatedDate")
                        .HasColumnType("datetime2")
                        .HasColumnName("CreatedDate");

                    b.Property<DateTime?>("DeletedDate")
                        .HasColumnType("datetime2")
                        .HasColumnName("DeletedDate");

                    b.Property<string>("Description")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)")
                        .HasColumnName("Description");

                    b.Property<Guid?>("LastModifyById")
                        .HasColumnType("uniqueidentifier")
                        .HasColumnName("LastModifyById");

                    b.Property<DateTime?>("LastModifyDate")
                        .HasColumnType("datetime2")
                        .HasColumnName("LastModifyDate");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)")
                        .HasColumnName("Name");

                    b.HasKey("Id");

                    b.HasIndex("CreatedById");

                    b.HasIndex("LastModifyById");

                    b.ToTable("CustomerType", "dbo");
                });

            modelBuilder.Entity("FUParkingModel.Object.Deposit", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier")
                        .HasColumnName("Id");

                    b.Property<int>("Amount")
                        .HasColumnType("int")
                        .HasColumnName("Amount");

                    b.Property<string>("AppTranId")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)")
                        .HasColumnName("AppTranId");

                    b.Property<DateTime>("CreatedDate")
                        .HasColumnType("datetime2")
                        .HasColumnName("CreatedDate");

                    b.Property<Guid>("CustomerId")
                        .HasColumnType("uniqueidentifier")
                        .HasColumnName("CustomerId");

                    b.Property<DateTime?>("DeletedDate")
                        .HasColumnType("datetime2")
                        .HasColumnName("DeletedDate");

                    b.Property<Guid>("PackageId")
                        .HasColumnType("uniqueidentifier")
                        .HasColumnName("PackageId");

                    b.Property<Guid>("PaymentMethodId")
                        .HasColumnType("uniqueidentifier")
                        .HasColumnName("PaymentMethodId");

                    b.HasKey("Id");

                    b.HasIndex("CustomerId");

                    b.HasIndex("PackageId");

                    b.HasIndex("PaymentMethodId");

                    b.ToTable("Deposit", "dbo");
                });

            modelBuilder.Entity("FUParkingModel.Object.Feedback", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier")
                        .HasColumnName("Id");

                    b.Property<DateTime>("CreatedDate")
                        .HasColumnType("datetime2")
                        .HasColumnName("CreatedDate");

                    b.Property<Guid>("CustomerId")
                        .HasColumnType("uniqueidentifier")
                        .HasColumnName("CustomerId");

                    b.Property<DateTime?>("DeletedDate")
                        .HasColumnType("datetime2")
                        .HasColumnName("DeletedDate");

                    b.Property<string>("Description")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)")
                        .HasColumnName("Description");

                    b.Property<Guid>("ParkingAreaId")
                        .HasColumnType("uniqueidentifier")
                        .HasColumnName("ParkingAreaId");

                    b.Property<Guid>("SessionId")
                        .HasColumnType("uniqueidentifier")
                        .HasColumnName("SessionId");

                    b.Property<string>("Title")
                        .HasColumnType("nvarchar(max)")
                        .HasColumnName("Title");

                    b.HasKey("Id");

                    b.HasIndex("CustomerId");

                    b.HasIndex("ParkingAreaId");

                    b.HasIndex("SessionId");

                    b.ToTable("Feedback", "dbo");
                });

            modelBuilder.Entity("FUParkingModel.Object.Gate", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier")
                        .HasColumnName("Id");

                    b.Property<Guid?>("CreatedById")
                        .HasColumnType("uniqueidentifier")
                        .HasColumnName("CreateById");

                    b.Property<DateTime>("CreatedDate")
                        .HasColumnType("datetime2")
                        .HasColumnName("CreatedDate");

                    b.Property<DateTime?>("DeletedDate")
                        .HasColumnType("datetime2")
                        .HasColumnName("DeletedDate");

                    b.Property<string>("Description")
                        .HasColumnType("nvarchar(max)")
                        .HasColumnName("Description");

                    b.Property<Guid>("GateTypeId")
                        .HasColumnType("uniqueidentifier")
                        .HasColumnName("GateTypeId");

                    b.Property<Guid?>("LastModifyById")
                        .HasColumnType("uniqueidentifier")
                        .HasColumnName("LastModifyById");

                    b.Property<DateTime?>("LastModifyDate")
                        .HasColumnType("datetime2")
                        .HasColumnName("LastModifyDate");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)")
                        .HasColumnName("Name");

                    b.Property<Guid>("ParkingAreaId")
                        .HasColumnType("uniqueidentifier")
                        .HasColumnName("ParkingAreaId");

                    b.Property<string>("StatusGate")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)")
                        .HasColumnName("StatusGate");

                    b.HasKey("Id");

                    b.HasIndex("CreatedById");

                    b.HasIndex("GateTypeId");

                    b.HasIndex("LastModifyById");

                    b.HasIndex("ParkingAreaId");

                    b.ToTable("Gate", "dbo");
                });

            modelBuilder.Entity("FUParkingModel.Object.GateType", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier")
                        .HasColumnName("Id");

                    b.Property<Guid?>("CreatedById")
                        .HasColumnType("uniqueidentifier")
                        .HasColumnName("CreateById");

                    b.Property<DateTime>("CreatedDate")
                        .HasColumnType("datetime2")
                        .HasColumnName("CreatedDate");

                    b.Property<DateTime?>("DeletedDate")
                        .HasColumnType("datetime2")
                        .HasColumnName("DeletedDate");

                    b.Property<string>("Descriptipn")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)")
                        .HasColumnName("Descriptipn");

                    b.Property<Guid?>("LastModifyById")
                        .HasColumnType("uniqueidentifier")
                        .HasColumnName("LastModifyById");

                    b.Property<DateTime?>("LastModifyDate")
                        .HasColumnType("datetime2")
                        .HasColumnName("LastModifyDate");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)")
                        .HasColumnName("Name");

                    b.HasKey("Id");

                    b.HasIndex("CreatedById");

                    b.HasIndex("LastModifyById");

                    b.ToTable("GateType", "dbo");
                });

            modelBuilder.Entity("FUParkingModel.Object.Package", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier")
                        .HasColumnName("Id");

                    b.Property<int>("CoinAmount")
                        .HasColumnType("int")
                        .HasColumnName("CoinAmount");

                    b.Property<Guid?>("CreatedById")
                        .HasColumnType("uniqueidentifier")
                        .HasColumnName("CreateById");

                    b.Property<DateTime>("CreatedDate")
                        .HasColumnType("datetime2")
                        .HasColumnName("CreatedDate");

                    b.Property<DateTime?>("DeletedDate")
                        .HasColumnType("datetime2")
                        .HasColumnName("DeletedDate");

                    b.Property<int?>("EXPPackage")
                        .HasColumnType("int")
                        .HasColumnName("EXPPackage");

                    b.Property<int?>("ExtraCoin")
                        .HasColumnType("int")
                        .HasColumnName("ExtraCoin");

                    b.Property<Guid?>("LastModifyById")
                        .HasColumnType("uniqueidentifier")
                        .HasColumnName("LastModifyById");

                    b.Property<DateTime?>("LastModifyDate")
                        .HasColumnType("datetime2")
                        .HasColumnName("LastModifyDate");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)")
                        .HasColumnName("Name");

                    b.Property<string>("PackageStatus")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)")
                        .HasColumnName("PackageStatus");

                    b.Property<int>("Price")
                        .HasColumnType("int")
                        .HasColumnName("Price");

                    b.HasKey("Id");

                    b.HasIndex("CreatedById");

                    b.HasIndex("LastModifyById");

                    b.ToTable("Package", "dbo");
                });

            modelBuilder.Entity("FUParkingModel.Object.ParkingArea", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier")
                        .HasColumnName("Id");

                    b.Property<int>("Block")
                        .HasColumnType("int")
                        .HasColumnName("Block");

                    b.Property<Guid?>("CreatedById")
                        .HasColumnType("uniqueidentifier")
                        .HasColumnName("CreateById");

                    b.Property<DateTime>("CreatedDate")
                        .HasColumnType("datetime2")
                        .HasColumnName("CreatedDate");

                    b.Property<DateTime?>("DeletedDate")
                        .HasColumnType("datetime2")
                        .HasColumnName("DeletedDate");

                    b.Property<string>("Description")
                        .HasColumnType("nvarchar(max)")
                        .HasColumnName("Description");

                    b.Property<Guid?>("LastModifyById")
                        .HasColumnType("uniqueidentifier")
                        .HasColumnName("LastModifyById");

                    b.Property<DateTime?>("LastModifyDate")
                        .HasColumnType("datetime2")
                        .HasColumnName("LastModifyDate");

                    b.Property<int>("MaxCapacity")
                        .HasColumnType("int")
                        .HasColumnName("MaxCapacity");

                    b.Property<string>("Mode")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)")
                        .HasColumnName("Mode");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)")
                        .HasColumnName("Name");

                    b.Property<string>("StatusParkingArea")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)")
                        .HasColumnName("StatusParkingArea");

                    b.HasKey("Id");

                    b.HasIndex("CreatedById");

                    b.HasIndex("LastModifyById");

                    b.ToTable("ParkingArea", "dbo");
                });

            modelBuilder.Entity("FUParkingModel.Object.Payment", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier")
                        .HasColumnName("Id");

                    b.Property<DateTime>("CreatedDate")
                        .HasColumnType("datetime2")
                        .HasColumnName("CreatedDate");

                    b.Property<DateTime?>("DeletedDate")
                        .HasColumnType("datetime2")
                        .HasColumnName("DeletedDate");

                    b.Property<Guid>("PaymentMethodId")
                        .HasColumnType("uniqueidentifier")
                        .HasColumnName("PaymentMethodId");

                    b.Property<Guid>("SessionId")
                        .HasColumnType("uniqueidentifier")
                        .HasColumnName("SessionId");

                    b.Property<int>("TotalPrice")
                        .HasColumnType("int")
                        .HasColumnName("TotalPrice");

                    b.HasKey("Id");

                    b.HasIndex("PaymentMethodId");

                    b.HasIndex("SessionId");

                    b.ToTable("Payment", "dbo");
                });

            modelBuilder.Entity("FUParkingModel.Object.PaymentMethod", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier")
                        .HasColumnName("Id");

                    b.Property<Guid?>("CreatedById")
                        .HasColumnType("uniqueidentifier")
                        .HasColumnName("CreateById");

                    b.Property<DateTime>("CreatedDate")
                        .HasColumnType("datetime2")
                        .HasColumnName("CreatedDate");

                    b.Property<DateTime?>("DeletedDate")
                        .HasColumnType("datetime2")
                        .HasColumnName("DeletedDate");

                    b.Property<string>("Description")
                        .HasColumnType("nvarchar(max)")
                        .HasColumnName("Description");

                    b.Property<Guid?>("LastModifyById")
                        .HasColumnType("uniqueidentifier")
                        .HasColumnName("LastModifyById");

                    b.Property<DateTime?>("LastModifyDate")
                        .HasColumnType("datetime2")
                        .HasColumnName("LastModifyDate");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)")
                        .HasColumnName("Name");

                    b.HasKey("Id");

                    b.HasIndex("CreatedById");

                    b.HasIndex("LastModifyById");

                    b.ToTable("PaymentMethod", "dbo");
                });

            modelBuilder.Entity("FUParkingModel.Object.PriceItem", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier")
                        .HasColumnName("Id");

                    b.Property<int?>("ApplyFromHour")
                        .HasColumnType("int")
                        .HasColumnName("ApplyFromHour");

                    b.Property<int?>("ApplyToHour")
                        .HasColumnType("int")
                        .HasColumnName("ApplyToHour");

                    b.Property<Guid?>("CreatedById")
                        .HasColumnType("uniqueidentifier")
                        .HasColumnName("CreateById");

                    b.Property<DateTime>("CreatedDate")
                        .HasColumnType("datetime2")
                        .HasColumnName("CreatedDate");

                    b.Property<DateTime?>("DeletedDate")
                        .HasColumnType("datetime2")
                        .HasColumnName("DeletedDate");

                    b.Property<Guid?>("LastModifyById")
                        .HasColumnType("uniqueidentifier")
                        .HasColumnName("LastModifyById");

                    b.Property<DateTime?>("LastModifyDate")
                        .HasColumnType("datetime2")
                        .HasColumnName("LastModifyDate");

                    b.Property<int>("MaxPrice")
                        .HasColumnType("int")
                        .HasColumnName("MaxPrice");

                    b.Property<int>("MinPrice")
                        .HasColumnType("int")
                        .HasColumnName("MinPrice");

                    b.Property<Guid>("PriceTableId")
                        .HasColumnType("uniqueidentifier")
                        .HasColumnName("PriceTableId");

                    b.HasKey("Id");

                    b.HasIndex("CreatedById");

                    b.HasIndex("LastModifyById");

                    b.HasIndex("PriceTableId");

                    b.ToTable("PriceItem", "dbo");
                });

            modelBuilder.Entity("FUParkingModel.Object.PriceTable", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier")
                        .HasColumnName("Id");

                    b.Property<DateTime?>("ApplyFromDate")
                        .HasColumnType("datetime2")
                        .HasColumnName("ApplyFromDate");

                    b.Property<DateTime?>("ApplyToDate")
                        .HasColumnType("datetime2")
                        .HasColumnName("ApplyToDate");

                    b.Property<Guid?>("CreatedById")
                        .HasColumnType("uniqueidentifier")
                        .HasColumnName("CreateById");

                    b.Property<DateTime>("CreatedDate")
                        .HasColumnType("datetime2")
                        .HasColumnName("CreatedDate");

                    b.Property<DateTime?>("DeletedDate")
                        .HasColumnType("datetime2")
                        .HasColumnName("DeletedDate");

                    b.Property<Guid?>("LastModifyById")
                        .HasColumnType("uniqueidentifier")
                        .HasColumnName("LastModifyById");

                    b.Property<DateTime?>("LastModifyDate")
                        .HasColumnType("datetime2")
                        .HasColumnName("LastModifyDate");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)")
                        .HasColumnName("Name");

                    b.Property<int>("Priority")
                        .HasColumnType("int")
                        .HasColumnName("Priority");

                    b.Property<string>("StatusPriceTable")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)")
                        .HasColumnName("StatusPriceTable");

                    b.Property<Guid>("VehicleTypeId")
                        .HasColumnType("uniqueidentifier")
                        .HasColumnName("VehicleTypeId");

                    b.HasKey("Id");

                    b.HasIndex("CreatedById");

                    b.HasIndex("LastModifyById");

                    b.HasIndex("VehicleTypeId");

                    b.ToTable("PriceTable", "dbo");
                });

            modelBuilder.Entity("FUParkingModel.Object.Role", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier")
                        .HasColumnName("Id");

                    b.Property<Guid?>("CreatedById")
                        .HasColumnType("uniqueidentifier")
                        .HasColumnName("CreateById");

                    b.Property<DateTime>("CreatedDate")
                        .HasColumnType("datetime2")
                        .HasColumnName("CreatedDate");

                    b.Property<DateTime?>("DeletedDate")
                        .HasColumnType("datetime2")
                        .HasColumnName("DeletedDate");

                    b.Property<string>("Description")
                        .HasColumnType("nvarchar(max)")
                        .HasColumnName("Description");

                    b.Property<Guid?>("LastModifyById")
                        .HasColumnType("uniqueidentifier")
                        .HasColumnName("LastModifyById");

                    b.Property<DateTime?>("LastModifyDate")
                        .HasColumnType("datetime2")
                        .HasColumnName("LastModifyDate");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)")
                        .HasColumnName("Name");

                    b.HasKey("Id");

                    b.HasIndex("CreatedById");

                    b.HasIndex("LastModifyById");

                    b.ToTable("Role", "dbo");
                });

            modelBuilder.Entity("FUParkingModel.Object.Session", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier")
                        .HasColumnName("Id");

                    b.Property<int>("Block")
                        .HasColumnType("int")
                        .HasColumnName("Block");

                    b.Property<Guid>("CardId")
                        .HasColumnType("uniqueidentifier")
                        .HasColumnName("CardId");

                    b.Property<Guid?>("CreatedById")
                        .HasColumnType("uniqueidentifier")
                        .HasColumnName("CreateById");

                    b.Property<DateTime>("CreatedDate")
                        .HasColumnType("datetime2")
                        .HasColumnName("CreatedDate");

                    b.Property<Guid?>("CustomerId")
                        .HasColumnType("uniqueidentifier")
                        .HasColumnName("CustomerId");

                    b.Property<DateTime?>("DeletedDate")
                        .HasColumnType("datetime2")
                        .HasColumnName("DeletedDate");

                    b.Property<Guid>("GateInId")
                        .HasColumnType("uniqueidentifier")
                        .HasColumnName("GateInId");

                    b.Property<Guid?>("GateOutId")
                        .HasColumnType("uniqueidentifier")
                        .HasColumnName("GateOutId");

                    b.Property<string>("ImageInUrl")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)")
                        .HasColumnName("ImageInUrl");

                    b.Property<string>("ImageOutUrl")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)")
                        .HasColumnName("ImageOutUrl");

                    b.Property<Guid?>("LastModifyById")
                        .HasColumnType("uniqueidentifier")
                        .HasColumnName("LastModifyById");

                    b.Property<DateTime?>("LastModifyDate")
                        .HasColumnType("datetime2")
                        .HasColumnName("LastModifyDate");

                    b.Property<string>("Mode")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)")
                        .HasColumnName("Mode");

                    b.Property<string>("PlateNumber")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)")
                        .HasColumnName("PlateNumber");

                    b.Property<string>("Status")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)")
                        .HasColumnName("Status");

                    b.Property<DateTime>("TimeIn")
                        .HasColumnType("datetime2")
                        .HasColumnName("TimeIn");

                    b.Property<DateTime>("TimeOut")
                        .HasColumnType("datetime2")
                        .HasColumnName("TimeOut");

                    b.Property<Guid>("VehicleTypeId")
                        .HasColumnType("uniqueidentifier")
                        .HasColumnName("VehicleTypeId");

                    b.HasKey("Id");

                    b.HasIndex("CardId");

                    b.HasIndex("CreatedById");

                    b.HasIndex("CustomerId");

                    b.HasIndex("GateInId");

                    b.HasIndex("GateOutId");

                    b.HasIndex("LastModifyById");

                    b.HasIndex("VehicleTypeId");

                    b.ToTable("Session", "dbo");
                });

            modelBuilder.Entity("FUParkingModel.Object.Transaction", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier")
                        .HasColumnName("Id");

                    b.Property<int>("Amount")
                        .HasColumnType("int")
                        .HasColumnName("Amount");

                    b.Property<DateTime>("CreatedDate")
                        .HasColumnType("datetime2")
                        .HasColumnName("CreatedDate");

                    b.Property<DateTime?>("DeletedDate")
                        .HasColumnType("datetime2")
                        .HasColumnName("DeletedDate");

                    b.Property<Guid?>("DepositId")
                        .HasColumnType("uniqueidentifier")
                        .HasColumnName("DepositId");

                    b.Property<Guid?>("PaymentId")
                        .HasColumnType("uniqueidentifier")
                        .HasColumnName("PaymentId");

                    b.Property<string>("TransactionDescription")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)")
                        .HasColumnName("TransactionDescription");

                    b.Property<string>("TransactionStatus")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)")
                        .HasColumnName("TransactionStatus");

                    b.Property<Guid?>("WalletId")
                        .HasColumnType("uniqueidentifier")
                        .HasColumnName("WalletId");

                    b.HasKey("Id");

                    b.HasIndex("DepositId");

                    b.HasIndex("PaymentId");

                    b.HasIndex("WalletId");

                    b.ToTable("Transaction", "dbo");
                });

            modelBuilder.Entity("FUParkingModel.Object.User", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier")
                        .HasColumnName("Id");

                    b.Property<Guid?>("CreatedById")
                        .HasColumnType("uniqueidentifier")
                        .HasColumnName("CreateById");

                    b.Property<DateTime>("CreatedDate")
                        .HasColumnType("datetime2")
                        .HasColumnName("CreatedDate");

                    b.Property<DateTime?>("DeletedDate")
                        .HasColumnType("datetime2")
                        .HasColumnName("DeletedDate");

                    b.Property<string>("Email")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)")
                        .HasColumnName("Email");

                    b.Property<string>("FullName")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)")
                        .HasColumnName("FullName");

                    b.Property<Guid?>("LastModifyById")
                        .HasColumnType("uniqueidentifier")
                        .HasColumnName("LastModifyById");

                    b.Property<DateTime?>("LastModifyDate")
                        .HasColumnType("datetime2")
                        .HasColumnName("LastModifyDate");

                    b.Property<string>("PasswordHash")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)")
                        .HasColumnName("PasswordHash");

                    b.Property<string>("PasswordSalt")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)")
                        .HasColumnName("PasswordSalt");

                    b.Property<Guid>("RoleId")
                        .HasColumnType("uniqueidentifier")
                        .HasColumnName("RoleId");

                    b.Property<string>("StatusUser")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)")
                        .HasColumnName("StatusUser");

                    b.HasKey("Id");

                    b.HasIndex("LastModifyById")
                        .IsUnique()
                        .HasFilter("[LastModifyById] IS NOT NULL");

                    b.HasIndex("RoleId");

                    b.ToTable("User", "dbo");
                });

            modelBuilder.Entity("FUParkingModel.Object.Vehicle", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier")
                        .HasColumnName("Id");

                    b.Property<DateTime>("CreatedDate")
                        .HasColumnType("datetime2")
                        .HasColumnName("CreatedDate");

                    b.Property<Guid>("CustomerId")
                        .HasColumnType("uniqueidentifier")
                        .HasColumnName("CustomerId");

                    b.Property<DateTime?>("DeletedDate")
                        .HasColumnType("datetime2")
                        .HasColumnName("DeletedDate");

                    b.Property<Guid?>("LastModifyById")
                        .HasColumnType("uniqueidentifier")
                        .HasColumnName("LastModifyById");

                    b.Property<DateTime?>("LastModifyDate")
                        .HasColumnType("datetime2")
                        .HasColumnName("LastModifyDate");

                    b.Property<string>("PlateImage")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)")
                        .HasColumnName("PlateImage");

                    b.Property<string>("PlateNumber")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)")
                        .HasColumnName("PlateNumber");

                    b.Property<Guid?>("StaffId")
                        .HasColumnType("uniqueidentifier")
                        .HasColumnName("StaffId");

                    b.Property<string>("StatusVehicle")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)")
                        .HasColumnName("StatusVehicle");

                    b.Property<Guid>("VehicleTypeId")
                        .HasColumnType("uniqueidentifier")
                        .HasColumnName("VehicleTypeId");

                    b.HasKey("Id");

                    b.HasIndex("CustomerId");

                    b.HasIndex("LastModifyById");

                    b.HasIndex("StaffId");

                    b.HasIndex("VehicleTypeId");

                    b.ToTable("Vehicle", "dbo");
                });

            modelBuilder.Entity("FUParkingModel.Object.VehicleType", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier")
                        .HasColumnName("Id");

                    b.Property<Guid?>("CreatedById")
                        .HasColumnType("uniqueidentifier")
                        .HasColumnName("CreateById");

                    b.Property<DateTime>("CreatedDate")
                        .HasColumnType("datetime2")
                        .HasColumnName("CreatedDate");

                    b.Property<DateTime?>("DeletedDate")
                        .HasColumnType("datetime2")
                        .HasColumnName("DeletedDate");

                    b.Property<string>("Description")
                        .HasColumnType("nvarchar(max)")
                        .HasColumnName("Description");

                    b.Property<Guid?>("LastModifyById")
                        .HasColumnType("uniqueidentifier")
                        .HasColumnName("LastModifyById");

                    b.Property<DateTime?>("LastModifyDate")
                        .HasColumnType("datetime2")
                        .HasColumnName("LastModifyDate");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)")
                        .HasColumnName("Name");

                    b.HasKey("Id");

                    b.HasIndex("CreatedById");

                    b.HasIndex("LastModifyById");

                    b.ToTable("VehicleType", "dbo");
                });

            modelBuilder.Entity("FUParkingModel.Object.Wallet", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier")
                        .HasColumnName("Id");

                    b.Property<int>("Balance")
                        .HasColumnType("int")
                        .HasColumnName("Balance");

                    b.Property<DateTime>("CreatedDate")
                        .HasColumnType("datetime2")
                        .HasColumnName("CreatedDate");

                    b.Property<Guid>("CustomerId")
                        .HasColumnType("uniqueidentifier")
                        .HasColumnName("CustomerId");

                    b.Property<DateTime?>("DeletedDate")
                        .HasColumnType("datetime2")
                        .HasColumnName("DeletedDate");

                    b.Property<DateTime?>("EXPDate")
                        .HasColumnType("datetime2")
                        .HasColumnName("EXPDate");

                    b.Property<string>("WalletType")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)")
                        .HasColumnName("WalletType");

                    b.HasKey("Id");

                    b.HasIndex("CustomerId");

                    b.ToTable("Wallet", "dbo");
                });

            modelBuilder.Entity("FUParkingModel.Object.Card", b =>
                {
                    b.HasOne("FUParkingModel.Object.User", "CreateBy")
                        .WithMany("CardsCreateBy")
                        .HasForeignKey("CreatedById")
                        .OnDelete(DeleteBehavior.NoAction);

                    b.HasOne("FUParkingModel.Object.User", "LastModifyBy")
                        .WithMany("CardsLastModifyBy")
                        .HasForeignKey("LastModifyById")
                        .OnDelete(DeleteBehavior.NoAction);

                    b.Navigation("CreateBy");

                    b.Navigation("LastModifyBy");
                });

            modelBuilder.Entity("FUParkingModel.Object.Customer", b =>
                {
                    b.HasOne("FUParkingModel.Object.User", "CreateBy")
                        .WithMany("CustomersCreateBy")
                        .HasForeignKey("CreatedById")
                        .OnDelete(DeleteBehavior.NoAction);

                    b.HasOne("FUParkingModel.Object.CustomerType", "CustomerType")
                        .WithMany("Customers")
                        .HasForeignKey("CustomerTypeId")
                        .OnDelete(DeleteBehavior.NoAction)
                        .IsRequired();

                    b.HasOne("FUParkingModel.Object.User", "LastModifyBy")
                        .WithMany("CustomersLastModifyBy")
                        .HasForeignKey("LastModifyById")
                        .OnDelete(DeleteBehavior.NoAction);

                    b.Navigation("CreateBy");

                    b.Navigation("CustomerType");

                    b.Navigation("LastModifyBy");
                });

            modelBuilder.Entity("FUParkingModel.Object.CustomerType", b =>
                {
                    b.HasOne("FUParkingModel.Object.User", "CreateBy")
                        .WithMany("CustomerTypeCreateBy")
                        .HasForeignKey("CreatedById")
                        .OnDelete(DeleteBehavior.NoAction);

                    b.HasOne("FUParkingModel.Object.User", "LastModifyBy")
                        .WithMany("CustomerTypeLastModifyBy")
                        .HasForeignKey("LastModifyById")
                        .OnDelete(DeleteBehavior.NoAction);

                    b.Navigation("CreateBy");

                    b.Navigation("LastModifyBy");
                });

            modelBuilder.Entity("FUParkingModel.Object.Deposit", b =>
                {
                    b.HasOne("FUParkingModel.Object.Customer", "Customer")
                        .WithMany("Deposits")
                        .HasForeignKey("CustomerId")
                        .OnDelete(DeleteBehavior.NoAction)
                        .IsRequired();

                    b.HasOne("FUParkingModel.Object.Package", "Package")
                        .WithMany("Deposits")
                        .HasForeignKey("PackageId")
                        .OnDelete(DeleteBehavior.NoAction)
                        .IsRequired();

                    b.HasOne("FUParkingModel.Object.PaymentMethod", "PaymentMethod")
                        .WithMany("Deposits")
                        .HasForeignKey("PaymentMethodId")
                        .OnDelete(DeleteBehavior.NoAction)
                        .IsRequired();

                    b.Navigation("Customer");

                    b.Navigation("Package");

                    b.Navigation("PaymentMethod");
                });

            modelBuilder.Entity("FUParkingModel.Object.Feedback", b =>
                {
                    b.HasOne("FUParkingModel.Object.Customer", "Customer")
                        .WithMany("Feedbacks")
                        .HasForeignKey("CustomerId")
                        .OnDelete(DeleteBehavior.NoAction)
                        .IsRequired();

                    b.HasOne("FUParkingModel.Object.ParkingArea", "ParkingArea")
                        .WithMany("Feedbacks")
                        .HasForeignKey("ParkingAreaId")
                        .OnDelete(DeleteBehavior.NoAction)
                        .IsRequired();

                    b.HasOne("FUParkingModel.Object.Session", "Session")
                        .WithMany("Feedbacks")
                        .HasForeignKey("SessionId")
                        .OnDelete(DeleteBehavior.NoAction)
                        .IsRequired();

                    b.Navigation("Customer");

                    b.Navigation("ParkingArea");

                    b.Navigation("Session");
                });

            modelBuilder.Entity("FUParkingModel.Object.Gate", b =>
                {
                    b.HasOne("FUParkingModel.Object.User", "CreateBy")
                        .WithMany("GateCreateBy")
                        .HasForeignKey("CreatedById")
                        .OnDelete(DeleteBehavior.NoAction);

                    b.HasOne("FUParkingModel.Object.GateType", "GateType")
                        .WithMany("Gates")
                        .HasForeignKey("GateTypeId")
                        .OnDelete(DeleteBehavior.NoAction)
                        .IsRequired();

                    b.HasOne("FUParkingModel.Object.User", "LastModifyBy")
                        .WithMany("GateLastModifyBy")
                        .HasForeignKey("LastModifyById")
                        .OnDelete(DeleteBehavior.NoAction);

                    b.HasOne("FUParkingModel.Object.ParkingArea", "ParkingArea")
                        .WithMany("Gates")
                        .HasForeignKey("ParkingAreaId")
                        .OnDelete(DeleteBehavior.NoAction)
                        .IsRequired();

                    b.Navigation("CreateBy");

                    b.Navigation("GateType");

                    b.Navigation("LastModifyBy");

                    b.Navigation("ParkingArea");
                });

            modelBuilder.Entity("FUParkingModel.Object.GateType", b =>
                {
                    b.HasOne("FUParkingModel.Object.User", "CreateBy")
                        .WithMany("GateTypeCreateBy")
                        .HasForeignKey("CreatedById")
                        .OnDelete(DeleteBehavior.NoAction);

                    b.HasOne("FUParkingModel.Object.User", "LastModifyBy")
                        .WithMany("GateTypeLastModifyBy")
                        .HasForeignKey("LastModifyById")
                        .OnDelete(DeleteBehavior.NoAction);

                    b.Navigation("CreateBy");

                    b.Navigation("LastModifyBy");
                });

            modelBuilder.Entity("FUParkingModel.Object.Package", b =>
                {
                    b.HasOne("FUParkingModel.Object.User", "CreateBy")
                        .WithMany("PackageCreateBy")
                        .HasForeignKey("CreatedById")
                        .OnDelete(DeleteBehavior.NoAction);

                    b.HasOne("FUParkingModel.Object.User", "LastModifyBy")
                        .WithMany("PackageLastModifyBy")
                        .HasForeignKey("LastModifyById")
                        .OnDelete(DeleteBehavior.NoAction);

                    b.Navigation("CreateBy");

                    b.Navigation("LastModifyBy");
                });

            modelBuilder.Entity("FUParkingModel.Object.ParkingArea", b =>
                {
                    b.HasOne("FUParkingModel.Object.User", "CreateBy")
                        .WithMany("ParkingAreaCreateBy")
                        .HasForeignKey("CreatedById")
                        .OnDelete(DeleteBehavior.NoAction);

                    b.HasOne("FUParkingModel.Object.User", "LastModifyBy")
                        .WithMany("ParkingAreaLastModifyBy")
                        .HasForeignKey("LastModifyById")
                        .OnDelete(DeleteBehavior.NoAction);

                    b.Navigation("CreateBy");

                    b.Navigation("LastModifyBy");
                });

            modelBuilder.Entity("FUParkingModel.Object.Payment", b =>
                {
                    b.HasOne("FUParkingModel.Object.PaymentMethod", "PaymentMethod")
                        .WithMany("Payments")
                        .HasForeignKey("PaymentMethodId")
                        .OnDelete(DeleteBehavior.NoAction)
                        .IsRequired();

                    b.HasOne("FUParkingModel.Object.Session", "Session")
                        .WithMany("Payments")
                        .HasForeignKey("SessionId")
                        .OnDelete(DeleteBehavior.NoAction)
                        .IsRequired();

                    b.Navigation("PaymentMethod");

                    b.Navigation("Session");
                });

            modelBuilder.Entity("FUParkingModel.Object.PaymentMethod", b =>
                {
                    b.HasOne("FUParkingModel.Object.User", "CreateBy")
                        .WithMany("PaymentMethodCreateBy")
                        .HasForeignKey("CreatedById")
                        .OnDelete(DeleteBehavior.NoAction);

                    b.HasOne("FUParkingModel.Object.User", "LastModifyBy")
                        .WithMany("PaymentMethodLastModifyBy")
                        .HasForeignKey("LastModifyById")
                        .OnDelete(DeleteBehavior.NoAction);

                    b.Navigation("CreateBy");

                    b.Navigation("LastModifyBy");
                });

            modelBuilder.Entity("FUParkingModel.Object.PriceItem", b =>
                {
                    b.HasOne("FUParkingModel.Object.User", "CreateBy")
                        .WithMany("PriceItemCreateBy")
                        .HasForeignKey("CreatedById")
                        .OnDelete(DeleteBehavior.NoAction);

                    b.HasOne("FUParkingModel.Object.User", "LastModifyBy")
                        .WithMany("PriceItemLastModifyBy")
                        .HasForeignKey("LastModifyById")
                        .OnDelete(DeleteBehavior.NoAction);

                    b.HasOne("FUParkingModel.Object.PriceTable", "PriceTable")
                        .WithMany("PriceItems")
                        .HasForeignKey("PriceTableId")
                        .OnDelete(DeleteBehavior.NoAction)
                        .IsRequired();

                    b.Navigation("CreateBy");

                    b.Navigation("LastModifyBy");

                    b.Navigation("PriceTable");
                });

            modelBuilder.Entity("FUParkingModel.Object.PriceTable", b =>
                {
                    b.HasOne("FUParkingModel.Object.User", "CreateBy")
                        .WithMany("PriceTableCreateBy")
                        .HasForeignKey("CreatedById")
                        .OnDelete(DeleteBehavior.NoAction);

                    b.HasOne("FUParkingModel.Object.User", "LastModifyBy")
                        .WithMany("PriceTableLastModifyBy")
                        .HasForeignKey("LastModifyById")
                        .OnDelete(DeleteBehavior.NoAction);

                    b.HasOne("FUParkingModel.Object.VehicleType", "VehicleType")
                        .WithMany("PriceTables")
                        .HasForeignKey("VehicleTypeId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("CreateBy");

                    b.Navigation("LastModifyBy");

                    b.Navigation("VehicleType");
                });

            modelBuilder.Entity("FUParkingModel.Object.Role", b =>
                {
                    b.HasOne("FUParkingModel.Object.User", "CreateBy")
                        .WithMany("RoleCreateBy")
                        .HasForeignKey("CreatedById")
                        .OnDelete(DeleteBehavior.NoAction);

                    b.HasOne("FUParkingModel.Object.User", "LastModifyBy")
                        .WithMany("RoleLastModifyBy")
                        .HasForeignKey("LastModifyById")
                        .OnDelete(DeleteBehavior.NoAction);

                    b.Navigation("CreateBy");

                    b.Navigation("LastModifyBy");
                });

            modelBuilder.Entity("FUParkingModel.Object.Session", b =>
                {
                    b.HasOne("FUParkingModel.Object.Card", "Card")
                        .WithMany("Sessions")
                        .HasForeignKey("CardId")
                        .OnDelete(DeleteBehavior.NoAction)
                        .IsRequired();

                    b.HasOne("FUParkingModel.Object.User", "CreateBy")
                        .WithMany("SessionCreateBy")
                        .HasForeignKey("CreatedById")
                        .OnDelete(DeleteBehavior.NoAction);

                    b.HasOne("FUParkingModel.Object.Customer", "Customer")
                        .WithMany("Sessions")
                        .HasForeignKey("CustomerId")
                        .OnDelete(DeleteBehavior.NoAction);

                    b.HasOne("FUParkingModel.Object.Gate", "GateIn")
                        .WithMany("SessionGateIns")
                        .HasForeignKey("GateInId")
                        .OnDelete(DeleteBehavior.NoAction)
                        .IsRequired();

                    b.HasOne("FUParkingModel.Object.Gate", "GateOut")
                        .WithMany("SessionGateOuts")
                        .HasForeignKey("GateOutId")
                        .OnDelete(DeleteBehavior.NoAction);

                    b.HasOne("FUParkingModel.Object.User", "LastModifyBy")
                        .WithMany("SessionLastModifyBy")
                        .HasForeignKey("LastModifyById")
                        .OnDelete(DeleteBehavior.NoAction);

                    b.HasOne("FUParkingModel.Object.VehicleType", "VehicleType")
                        .WithMany("Sessions")
                        .HasForeignKey("VehicleTypeId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Card");

                    b.Navigation("CreateBy");

                    b.Navigation("Customer");

                    b.Navigation("GateIn");

                    b.Navigation("GateOut");

                    b.Navigation("LastModifyBy");

                    b.Navigation("VehicleType");
                });

            modelBuilder.Entity("FUParkingModel.Object.Transaction", b =>
                {
                    b.HasOne("FUParkingModel.Object.Deposit", "Deposit")
                        .WithMany("Transactions")
                        .HasForeignKey("DepositId")
                        .OnDelete(DeleteBehavior.NoAction);

                    b.HasOne("FUParkingModel.Object.Payment", "Payment")
                        .WithMany("Transactions")
                        .HasForeignKey("PaymentId")
                        .OnDelete(DeleteBehavior.NoAction);

                    b.HasOne("FUParkingModel.Object.Wallet", "Wallet")
                        .WithMany("Transactions")
                        .HasForeignKey("WalletId")
                        .OnDelete(DeleteBehavior.NoAction);

                    b.Navigation("Deposit");

                    b.Navigation("Payment");

                    b.Navigation("Wallet");
                });

            modelBuilder.Entity("FUParkingModel.Object.User", b =>
                {
                    b.HasOne("FUParkingModel.Object.User", "LastModifyBy")
                        .WithOne("CreateBy")
                        .HasForeignKey("FUParkingModel.Object.User", "LastModifyById");

                    b.HasOne("FUParkingModel.Object.Role", "Role")
                        .WithMany("Users")
                        .HasForeignKey("RoleId")
                        .OnDelete(DeleteBehavior.NoAction)
                        .IsRequired();

                    b.Navigation("LastModifyBy");

                    b.Navigation("Role");
                });

            modelBuilder.Entity("FUParkingModel.Object.Vehicle", b =>
                {
                    b.HasOne("FUParkingModel.Object.Customer", "Customer")
                        .WithMany("Vehicles")
                        .HasForeignKey("CustomerId")
                        .OnDelete(DeleteBehavior.NoAction)
                        .IsRequired();

                    b.HasOne("FUParkingModel.Object.User", "LastModifyBy")
                        .WithMany("VehicleLastModifyBy")
                        .HasForeignKey("LastModifyById")
                        .OnDelete(DeleteBehavior.NoAction);

                    b.HasOne("FUParkingModel.Object.User", "Staff")
                        .WithMany("VehicleStaffs")
                        .HasForeignKey("StaffId")
                        .OnDelete(DeleteBehavior.NoAction);

                    b.HasOne("FUParkingModel.Object.VehicleType", "VehicleType")
                        .WithMany("Vehicles")
                        .HasForeignKey("VehicleTypeId")
                        .OnDelete(DeleteBehavior.NoAction)
                        .IsRequired();

                    b.Navigation("Customer");

                    b.Navigation("LastModifyBy");

                    b.Navigation("Staff");

                    b.Navigation("VehicleType");
                });

            modelBuilder.Entity("FUParkingModel.Object.VehicleType", b =>
                {
                    b.HasOne("FUParkingModel.Object.User", "CreateBy")
                        .WithMany("VehicleTypeCreateBy")
                        .HasForeignKey("CreatedById")
                        .OnDelete(DeleteBehavior.NoAction);

                    b.HasOne("FUParkingModel.Object.User", "LastModifyBy")
                        .WithMany("VehicleTypeLastModifyBy")
                        .HasForeignKey("LastModifyById")
                        .OnDelete(DeleteBehavior.NoAction);

                    b.Navigation("CreateBy");

                    b.Navigation("LastModifyBy");
                });

            modelBuilder.Entity("FUParkingModel.Object.Wallet", b =>
                {
                    b.HasOne("FUParkingModel.Object.Customer", "Customer")
                        .WithMany("Wallets")
                        .HasForeignKey("CustomerId")
                        .OnDelete(DeleteBehavior.NoAction)
                        .IsRequired();

                    b.Navigation("Customer");
                });

            modelBuilder.Entity("FUParkingModel.Object.Card", b =>
                {
                    b.Navigation("Sessions");
                });

            modelBuilder.Entity("FUParkingModel.Object.Customer", b =>
                {
                    b.Navigation("Deposits");

                    b.Navigation("Feedbacks");

                    b.Navigation("Sessions");

                    b.Navigation("Vehicles");

                    b.Navigation("Wallets");
                });

            modelBuilder.Entity("FUParkingModel.Object.CustomerType", b =>
                {
                    b.Navigation("Customers");
                });

            modelBuilder.Entity("FUParkingModel.Object.Deposit", b =>
                {
                    b.Navigation("Transactions");
                });

            modelBuilder.Entity("FUParkingModel.Object.Gate", b =>
                {
                    b.Navigation("SessionGateIns");

                    b.Navigation("SessionGateOuts");
                });

            modelBuilder.Entity("FUParkingModel.Object.GateType", b =>
                {
                    b.Navigation("Gates");
                });

            modelBuilder.Entity("FUParkingModel.Object.Package", b =>
                {
                    b.Navigation("Deposits");
                });

            modelBuilder.Entity("FUParkingModel.Object.ParkingArea", b =>
                {
                    b.Navigation("Feedbacks");

                    b.Navigation("Gates");
                });

            modelBuilder.Entity("FUParkingModel.Object.Payment", b =>
                {
                    b.Navigation("Transactions");
                });

            modelBuilder.Entity("FUParkingModel.Object.PaymentMethod", b =>
                {
                    b.Navigation("Deposits");

                    b.Navigation("Payments");
                });

            modelBuilder.Entity("FUParkingModel.Object.PriceTable", b =>
                {
                    b.Navigation("PriceItems");
                });

            modelBuilder.Entity("FUParkingModel.Object.Role", b =>
                {
                    b.Navigation("Users");
                });

            modelBuilder.Entity("FUParkingModel.Object.Session", b =>
                {
                    b.Navigation("Feedbacks");

                    b.Navigation("Payments");
                });

            modelBuilder.Entity("FUParkingModel.Object.User", b =>
                {
                    b.Navigation("CardsCreateBy");

                    b.Navigation("CardsLastModifyBy");

                    b.Navigation("CreateBy");

                    b.Navigation("CustomerTypeCreateBy");

                    b.Navigation("CustomerTypeLastModifyBy");

                    b.Navigation("CustomersCreateBy");

                    b.Navigation("CustomersLastModifyBy");

                    b.Navigation("GateCreateBy");

                    b.Navigation("GateLastModifyBy");

                    b.Navigation("GateTypeCreateBy");

                    b.Navigation("GateTypeLastModifyBy");

                    b.Navigation("PackageCreateBy");

                    b.Navigation("PackageLastModifyBy");

                    b.Navigation("ParkingAreaCreateBy");

                    b.Navigation("ParkingAreaLastModifyBy");

                    b.Navigation("PaymentMethodCreateBy");

                    b.Navigation("PaymentMethodLastModifyBy");

                    b.Navigation("PriceItemCreateBy");

                    b.Navigation("PriceItemLastModifyBy");

                    b.Navigation("PriceTableCreateBy");

                    b.Navigation("PriceTableLastModifyBy");

                    b.Navigation("RoleCreateBy");

                    b.Navigation("RoleLastModifyBy");

                    b.Navigation("SessionCreateBy");

                    b.Navigation("SessionLastModifyBy");

                    b.Navigation("VehicleLastModifyBy");

                    b.Navigation("VehicleStaffs");

                    b.Navigation("VehicleTypeCreateBy");

                    b.Navigation("VehicleTypeLastModifyBy");
                });

            modelBuilder.Entity("FUParkingModel.Object.VehicleType", b =>
                {
                    b.Navigation("PriceTables");

                    b.Navigation("Sessions");

                    b.Navigation("Vehicles");
                });

            modelBuilder.Entity("FUParkingModel.Object.Wallet", b =>
                {
                    b.Navigation("Transactions");
                });
#pragma warning restore 612, 618
        }
    }
}
